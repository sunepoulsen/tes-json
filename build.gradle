import org.jetbrains.changelog.ExtensionsKt

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:8.4.2'
    }
}

plugins {
    id 'org.jetbrains.changelog'
    id 'net.researchgate.release'
    id 'org.sonarqube'
    id 'jacoco'
}

apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'org.owasp.dependencycheck'

group 'dk.sunepoulsen.tes'
version "${project.property('version')}"

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url "${System.properties['maven.repository.base.url']}/${System.properties['maven.repository.snapshots']}"
        allowInsecureProtocol = true
    }
    maven {
        url "${System.properties['maven.repository.base.url']}/${System.properties['maven.repository.releases']}"
        allowInsecureProtocol = true
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = "${System.properties['maven.repository.base.url']}/" + (
                version ==~ /^\d+\.\d+\.\d+$/ ?
                    "${System.properties['maven.repository.releases']}" :
                    "${System.properties['maven.repository.snapshots']}"
            )
            allowInsecureProtocol = true
            credentials {
                username = "${System.properties['maven.repository.username']}"
                password = "${System.properties['maven.repository.password']}"
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    // Jackson Json
    api 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Logging
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation 'org.slf4j:log4j-over-slf4j:2.0.9'

    // JUnit
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'

    // Spock
    testImplementation 'org.apache.groovy:groovy:4.0.15'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    testImplementation 'net.bytebuddy:byte-buddy:1.14.9'
}

test {
    useJUnitPlatform()
}

task allWrappers(type: Wrapper) {
    gradleVersion = "${project.property('gradle.version')}"
}

changelog {
    path = "${project.projectDir}/CHANGELOG.md"
    header = "${-> version.get()} - ${ExtensionsKt.date("dd-MM-yyyy")}"
    headerParserRegex = ~/(\d+\.\d+\.\d+)/
    introduction.set(
        """
        All notable changes to this project will be documented in this file. The target-audience for this document 
        is developers and operations.
        
        The changelog-format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project 
        adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
        
        Developers should add an entry to "Unreleased work" under the appropriate subsection, describing their work 
        _prior_ to merging to master. The entry should contain a link to the Jira-story. 
        
        Adhere to the following format:
        ```
        - [Name of Jira-story or subtask](link to Jira-story): Description of the completed work`
        ```
        Example-entry:
        
        - [TES-8](https://sunepoulsen.atlassian.net/browse/TES-8): Library for JSON handling
        
        For release-dates, use date-format: DD-MM-YYYY
        """.stripIndent()
    )
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "Unreleased work"
    groups = ["Features", "Fixed", "Security"]
}

release {
    git {
        requireBranch.set('main')
    }
}

tasks.afterReleaseBuild.dependsOn tasks.patchChangelog
tasks.afterReleaseBuild.dependsOn tasks.publish
tasks.afterReleaseBuild.dependsOn tasks.sonarqube

jacocoTestReport {
    reports {
        xml.required = true
    }
}

dependencyCheck {
    format='ALL'
}

sonarqube {
    properties {
        property 'sonar.gradle.skipCompile', 'true'
        
        property 'sonar.dependencyCheck.severity.blocker', '9.0'
        property 'sonar.dependencyCheck.severity.critical', '7.0'
        property 'sonar.dependencyCheck.severity.major', '4.0'
        property 'sonar.dependencyCheck.severity.minor', '0.0'

        property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
        property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
    }
}

tasks.jacocoTestReport.dependsOn tasks.test
tasks.sonarqube.dependsOn tasks.dependencyCheckAnalyze
tasks.sonarqube.dependsOn tasks.jacocoTestReport
